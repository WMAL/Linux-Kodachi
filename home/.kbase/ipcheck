#!/bin/bash
# Script written by Warith Al Maawali  
# (c) 2019 Founder of Eagle Eye Digital Solutions
# http://www.digi77.com
# http://www.om77.net
# script starts here:




cd $(dirname $0) 
source Globalconfig;



# detect empty arguments
if [ $# -eq 0 ]; then
	echo "No arguments entered"
	
	#pause 'Press [Enter] key to exit...or Ctrl c to quit the script and run it again correctly'	
        #exit 1
fi


# Accept command line arguments
while [ $# -gt 0 ]
do
    case "$1" in
    -a)  myAction=$2 ; shift;;       
	--)	shift; break;;
	-*)
	    echo >&2 \
	    "usage: $0 [-v] [-f file] [file ...]"
	    exit 1;;
	*)  break;;	# terminate while loop
    esac
    shift
done
 
 

if [[ "$myAction" == *digi* ]]
then     
	print_good "Check to see if digi77.com is online";
	netIP='digi77.com';
	#ping -c 1 -W 15 "$netIP" &> /dev/null
	wget --timeout=15 --waitretry=0 --tries=3 --retry-connrefused -q --spider $netIP &> /dev/null
	if [ $? -eq 0 ]; 
	then
		print_good "Digi77.com is online";				
		# Clean the file
		#rm -f $Mykodachi_path/workingdomain.txt;
		url2="https://www.digi77.com/software/vpn/ipcheckplain.php";
		echo "1" > $Mykodachi_path/ipretrievetype.txt
		echo $url2 > $Mykodachi_path/workingdomain.txt;		
		echo "Digi77" > $Mykodachi_path/iptypeletter;
		echo $url2 > $Mykodachi_path/workingdomain.txt;	
		#notify-send -i $notifyIcon "IP will be fetched from Digi77.com";
	else
		print_error "Digi77.com is offline request terminiated please again try later";
	fi
    #exit; # don't exit because this script used in system health
fi

if [[ "$myAction" == *other* ]]
then   
	# Clean the file
	rm -f $Mykodachi_path/workingdomain.txt;
	for url in $(cat $Mykodachi_path/domains.txt) 
	do 
		# Only chech if we don't have important tasks by systemhealth
		actionpickervalue=$(cat $Mykodachi_path/actionpicker);
		if [[ "$actionpickervalue" == 0 ]]
		then
			
			# Request the ip from URL 
			x=$(sudo curl --silent --fail -m 30 "$url");
			# Clean the ip
			x=$(echo $x |grep -o '[0-9]\{1,3\}\.[0-9]\{1,3\}\.[0-9]\{1,3\}\.[0-9]\{1,3\}');
			x=$(echo $x|xargs);
			# If reply is valid ip address then accept the domain
			if [[ "$x" =~ ^(([1-9]?[0-9]|1[0-9][0-9]|2([0-4][0-9]|5[0-5]))\.){3}([1-9]?[0-9]|1[0-9][0-9]|2([0-4][0-9]|5[0-5]))$ ]]; then
				print_good "Test pass adding URL it exists: $url = IP: $x"
				echo $url >> $Mykodachi_path/workingdomain.txt;
				echo "0" > $Mykodachi_path/ipretrievetype.txt;
				echo "other sites" > $Mykodachi_path/iptypeletter;				
			else
				print_error "Excluding URL it does not exist: $url or ip is bad: $x"
			fi 
		fi
		
	done
	#notify-send -i $notifyIcon "IP will be fetched from other IP service providers";
fi

sudo chown $LOGED_USER.$LOGED_USER $Mykodachi_path/workingdomain.txt;
   
#exit 1; #exit; # don't exit because this script used in system health
 
