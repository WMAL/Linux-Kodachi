#!/bin/bash
# Script written by Warith Al Maawali  
# (c) 2019 Founder of Eagle Eye Digital Solutions
# http://www.digi77.com
# http://www.om77.net
# script starts here:


cd $(dirname $0) 
source Globalconfig;


torifySystem=$(cat $Mykodachi_path/torifysystemstatus);
if [[ "$torifySystem" == *No* ]]
then
	netIP='digi77.com';
	# if google is down replace with digi77.com 
	wget --timeout=2 --waitretry=0 --tries=3 --retry-connrefused -q --spider "$netIP" &> /dev/null

	source $Mykodachi_path/vpnattributes
	thePort="";
	theProtocol="";
	theIP="";
	if [ $? -eq 0 ]; 
	then
		#Clean up
		sudo rm -f /etc/ufw/before.rules.*
		sudo rm -f /etc/ufw/before6.rules.*
		sudo rm -f /etc/ufw/after.rules.*
		sudo rm -f /etc/ufw/after6.rules.*
		sudo rm -f /etc/ufw/user.rules.*
		sudo rm -f /etc/ufw/user6.rules.*
		

		
	
		SERVICE='openvpn';
		if (ps ax | grep -v grep | grep $SERVICE > /dev/null)
		then
			
					
			theIP=$(cat $Mykodachi_path/.eeds-ipinfo|cut -d : -f 1|tr -d " \t\n\r");
			theSecS=$(cat $Mykodachi_path/.eeds-ipinfo|cut -d : -f 2|tr -d " \t\n\r");
			if [ ! -n "$theSecS" ]     
			then 	
				print_error "Sorry try again when you have a secure VPN IP address";
				exit;
			fi
			
			if (echo $theSecS|grep "notsecure")
			then
				print_error "Sorry try again when you have a secure VPN IP address";
				exit;
			fi
			echo "The ips is:$theIP"
			if [ ! -n "$theIP" ]     
			then 	
				print_error "Empty IP will try to fetch from the Internet";
				randomdomain=$(cat $Mykodachi_path/workingdomain.txt | xargs shuf -n1 -e);
				theIP=$(sudo curl -s -m 30 $randomdomain );
				theIP=$(echo $theIP | sed 's/ //g');
				if [[ "$x54" != *:* ]]
				then
					theIP=$(echo $theIP|cut -d : -f 1|tr -d " \t\n\r")
				fi 
				echo "Ip from the Internet is: " $theIP;
			fi
				
			#sudo ufw disable;
			#sudo ufw --force reset;	# this will create backup of rules in /etc/ufw/
			#sudo ufw disable;
			sudo ufw allow out on tun0 #from any to any;
			sudo ufw allow out on tun0-00 #from any to any;
			sudo ufw allow out from any to $theIP; 
			print_good "Final rule was:";
			print_good "${cayn}sudo ufw allow out from any to $theIP;${reset}";
			sudo ufw default deny incoming;
			sudo ufw default deny outgoing; 
			sudo ufw enable;
			notify-send -t 30000 -i $notifyIcon "ufw firewall command used to filter traffic via:
IP: $theIP
If VPN disconnects you won't have Internet connection
You should click on allow all Internet traffic button to get it back";

			notify-send -i $notifyIcon "Only vpn traffic will be allowed if VPN is on";
		else
			print_error "Please connect to VPN first or wait for Kodachi to establish it then run this script";
		fi
	else
		print_error "No Internet you have to be connected";
	fi
else
	notify-send -i $notifyIcon "Please disable Torified system first then run the script again!"
	print_error "Please disable Torified system first then run the script again!"
fi
echo -e "\n \n \n";

exit 1;

 
